import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

public class GUI {
    private JFrame frame;

    public GUI(String address, int porta) {
        frame = new JFrame("Port NodeAddress [ address " + address + ":" + porta + " ]");
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        addFrameContent();
        frame.pack(); // Ajusta o tamanho para que todo o conteúdo seja visível
    }

    public void open() {
        frame.setVisible(true); // Abre a janela
    }

    private void addFrameContent() {
        // Dividindo a janela principal em duas partes: superior e inferior
        frame.setLayout(new BorderLayout());

        // Parte superior (rótulo, campo de texto e botão de busca)
        JPanel searchPanel = new JPanel();
        searchPanel.setLayout(new FlowLayout(FlowLayout.LEFT)); // Layout para alinhar os componentes à esquerda

        JLabel searchLabel = new JLabel("Texto a procurar:");
        JTextField searchTextField = new JTextField(20); // Campo de texto com largura fixa
        JButton searchButton = new JButton("Procurar");

        searchPanel.add(searchLabel);
        searchPanel.add(searchTextField);
        searchPanel.add(searchButton);

        // Adiciona a parte superior ao topo do layout principal
        frame.add(searchPanel, BorderLayout.NORTH);

        // Parte inferior com área à esquerda e botões à direita
        JPanel bottomPanel = new JPanel();
        bottomPanel.setLayout(new BorderLayout()); // Layout dividido entre esquerda e direita

        // Área grande à esquerda
        JPanel leftArea = new JPanel();
        leftArea.setPreferredSize(new Dimension(300, 150)); // Tamanho preferido da área à esquerda
        leftArea.setBorder(BorderFactory.createLineBorder(Color.BLACK)); // Adiciona uma borda para visualizar a área

        // Painel à direita com dois botões grandes
        JPanel rightButtonsPanel = new JPanel();
        rightButtonsPanel.setLayout(new GridLayout(2, 1, 10, 10)); // 2 linhas e 1 coluna com espaçamento de 10px

        JButton downloadButton = new JButton("Descarregar");
        JButton connectButton = new JButton("Ligar a Nó");

        downloadButton.setPreferredSize(new Dimension(150, 75)); // Definindo tamanho preferido
        connectButton.setPreferredSize(new Dimension(150, 75));  // Definindo tamanho preferido

        rightButtonsPanel.add(downloadButton);
        rightButtonsPanel.add(connectButton);

        // Adiciona as áreas esquerda e direita ao painel inferior
        bottomPanel.add(leftArea, BorderLayout.CENTER);
        bottomPanel.add(rightButtonsPanel, BorderLayout.EAST);

        // Adiciona a parte inferior ao centro do layout principal
        frame.add(bottomPanel, BorderLayout.CENTER);

        // Adicionando ActionListener ao botão de download para abrir a janela NewNode
        downloadButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Abrir a janela NewNode ao clicar no botão Descarregar
                NewNode newNodeWindow = new NewNode();
                newNodeWindow.open();
            }
        });
    }

    public static void main(String[] args) {
        GUI window = new GUI("192.168.1.1", 80);
        window.open();
    }
}
